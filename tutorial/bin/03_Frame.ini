; orx - Tutorial config file
; Should be used with orx v.1.0+

[Main]
GameFile = 03_Frame; NB: It defines the game file when using the default main executable

[Input]
SetList = TutorialInput

[TutorialInput]
MOUSE_LEFT  = RotateLeft
MOUSE_RIGHT = RotateRight
KEY_LSHIFT  = ScaleUp
KEY_LCTRL   = ScaleDown

[Mouse]
ShowCursor = false

[Viewport]
Camera            = Camera
;RelativeSize      = (0.5, 0.5, 0.0)
;RelativePosition  = center bottom
;BackgroundColor   = (128, 0, 128)

[Camera]
; We use the same size for the camera than our display on screen so as to obtain a 1:1 ratio
FrustumWidth  = @Display.ScreenWidth
FrustumHeight = @Display.ScreenHeight
FrustumFar    = 1.0
FrustumNear   = 0.0
Position      = (0.0, 0.0, -1.0)

[BoxGraphic]
Texture = ../../data/object/box.png
Pivot   = center

[ObjectTemplate]
; We will use this as template for all of our displayed objects
Graphic = BoxGraphic
Scale   = 4.0

[Object0@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Position = (0.0, 0.0, -0.9)

[Object1@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Color     = (255, 0, 0)
Position  = (-100.0, -100.0, 0.0)

[Object2@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Color     = (0, 255, 0)
Position  = (100.0, -100.0, 0.0)

[Object3@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Color     = (0, 0, 255)
Position  = (-100.0, 100.0, 0.0)

[Object4@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Position  = (100.0, 100.0, 0.0)
Color     = (255, 255, 0)

[ParentObject]
; This defines an empty object that has no graphic property or any other kind of properties, beside a child list. We'll use it as a parent for our 4 objects
ChildList = Object3 # Object4
