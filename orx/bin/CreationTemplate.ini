; Orx creation template - No unicode support

; FLOAT values are expressed with a '.' as decimal separator.
; INT can be expressed using different prefixes (not case sensitive):
; - decimal without any prefix: 16
; - hexadecimal with prefix '0x': 0x10
; - octal with prefix '0': 020
; - binary with prefix '0b': 0b10000

; Wherever numerical values are used (Int, Float and Vector),  a random generated value can be obtained using the separator ~.
; Example:
; Value1=0.5~1.0;
; Value2={0.0, 0.0, 0.0} ~{1.0, 1.0, 1.0};

; All sections can inherit from another one using the inheritance marker '@'
; Example:
; [Template]
; MyKey1=MyValue1;
; MyKey2=MyValue2;
; [Object@Template] <= This section will contains all values defined in the section 'Template';

; All values can be locally inherited from another section using the inheritance marker '@'
; Example:
; [Template]
; MyKey=MyValue;
; [Object]
; MyKey=@Template; <= The value for 'MyKey' will be inherited from the one in the section 'Template'. This inheritance can be chained;

[ObjectTemplate]
Graphic=GraphicTemplate;
AnimationSet=AnimationSetTemplate;
AnimationFrequency=[Float];
Body=BodyTemplate;
Color={r, g, b};
Alpha=[Float];
AutoScroll=x|y|both;
Flip=x|y|both;
DepthScale=true|false;
Position={x, y, z};
Rotation=[Float];
Scale={x,y,z}|[Float]; NB: z is ignored for 2D objects;
Smoothing=true|false; NB: no value will defaults to the global display settings;
FX=FXTemplate; NB: FX will be played immediately;

[GraphicTemplate]
Texture=path/to/ImageFile.ext;
TextureTL={x, y, z}; NB: z is ignored;
TextureBR={x, y, z}; NB: z is ignored;
Pivot=centered|{x, y, z}; NB: z is ignored for 2D graphics;
Repeat={x, y, z}; NB: z is ignored and other values must be strictly positive;
Flip=x|y|both;
Color={r, g, b};
Alpha=[Float];
Smoothing=true|false; NB: no value will defaults to the object settings;

[BodyTemplate]
Position={x, y, z};
Rotation=[Float];
Inertia=[Float];
Mass=[Float];
LinearDamping=[Float];
AngularDamping=[Float];
FixedRotation=true|false;
HighSpeed=true|false;
Dynamic=true|false;
Part[Int]=BodyPartTemplate; NB: There is a maximum of 8 parts, and there should be no gap. Example: Part1=BodyPartSphereTemplate;

[BodyPartSphereTemplate]
Type=Sphere;
Center={x, y, z}|full;
Radius=[Float]|full;
Friction=[Float];
Restitution=[Float];
Density=[Float];
SelfFlags=flags;
CheckMask=flags;
Solid=true|false;

[BodyPartBoxTemplate]
Type=Box;
TopLeft={x, y, z}|full;
BottomRight={x, y, z}|full;
Friction=[Float];
Restitution=[Float];
Density=[Float];
SelfFlags=flags;
CheckMask=flags;
Solid=true|false;

[AnimationSetTemplate]
Frequency=[Float];
Animation[Int]=AnimationTemplate; Example: Animation1=Animation1Template;
Link[Int]=Animation[N1]-Animation[N2]; Example: Link1=Animation2-Animation3;
LinkProperty[Int]=immediate; Example: LinkProperty1=immediate;
LinkPriority[Int]=[Int]; NB: Value should be [0-15]. 0 being the lowest, 8 the default and 15 the highest; Example: LinkPriority1=10;

[AnimationTemplate]
DefaultKeyDuration=[Float];
KeyData[Int]=GraphicTemplate; Example: KeyData1=GraphicTemplate1;
KeyDuration[Int]=[Float]; Example: KeyDuration1=0.1f;

[ViewportTemplate]
Texture=path/to/TextureFile.ext; NB: No texture will default to the screen one
RelativePosition= left|right|top|bottom; Example: RelativePosition=top left;
Position={x, y, z}; NB: Position is in pixels and will be ignored if RelativePosition is specified
RelativeSize={x, y, z}; Example: RelativeSize={1.0, 1.0, 0.0};
Size={x, y, z}; NB: Size is in pixels and will be ignored if RelativeSize is specified
BackgroundColor={r, g, b};
BackgroundClear=true|false; NB: This value defaults to true if not specified
Camera=CameraTemplate;

[CameraTemplate]
Zoom=[Float];
Position={x, y, z};
Rotation=[Float];
FrustumNear=[Float];
FrustumFar=[Float];
FrustumWidth=[Float];
FrustumHeight=[Float];

[SoundTemplate]
Sound=path/to/SoundFile.ext; NB: If defined, Music will be ignored. Use it for short sound effects;
Music=path/to/MusicFile.ext; NB: If Sound is not defined, it'll be used to load a buffered stream of sound in memory;
Loop=true|false;
Pitch=[Float]; NB: The default pitch is 1.0, which correspond to the sound recording frequency;
Volume=[Float]; NB: Volume is in [0.0-1.0]. Defaults to 1.0;
KeepDataInCache=true|false; NB: If true, the sound data (ie. the sample itself) will always stay in cache. This value is ignored for a music. Defaults to false;

[FXTemplate]
Slot[Int]=FXSlotTemplate; NB: There is a maximum of 5 slots, and the FX stops at the first empty slot. Example: Slot1=FXSlot1Template;
KeepInCache=true|false; NB: If true, the FX will always stay in cache, even if no FX of this type is currently in use. Can save time but costs memory. Defaults to false;

[FXSlotTemplate]
Type=alpha | color | scale | rotation | position;
StartTime=[Float]; NB: Start time in seconds;
EndTime=[Float]; NB: End time in seconds;
Period=[Float]; NB: Cycle period is in seconds. 0.0 means the whole length will be used as a period;
Phasis=[Float]; NB: Cycle phasis is [0.0-1.0];
Amplification=[Float]; NB: Curbe amplification coef over time. < 1.0 => attenuation, = 1.0 => constant, > 1.0 => amplification. Defaults to 1.0;
Curve=linear|saw|sine;
Pow=[Float]; NB: 1.0 is the default value and will result in a regulard curve; Defaults to false;
Absolute=true|false; NB: The curve coefficient will be used as an absolute value. Defaults to false (=relative);
StartValue=[Float] | {x, y, z}; NB: Vectors are only used for scale and rotation;
EndValue=[Float] | {x, y, z}; NB: Vectors are only used for scale and rotation;
