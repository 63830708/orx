; Orx creation template - No unicode support

; FLOAT values are expressed with a '.' as deciaml separator.
; INT can be expressed using different prefixes (not case sensitive):
; - decimal without any prefix: 16
; - hexadecimal with prefix '0x': 0x10
; - octal with prefix '0': 020
; - binary with prefix '0b': 0b10000

[ObjectTemplate]
Graphic=GraphicTemplate;
Animation=AnimationCursorTemplate;
Body=BodyTemplate;
Color=[Int]; NB: RGBA format, easier to express in hexadecimal. Example: Color=0xFF0000FF;
AutoScroll=x|y|both;
Flip=x|y|both;
DepthScale=true|false;
Position={x, y, z};
Rotation=[Float];
Scale={x,y,z}; NB: z is ignored for 2D objects;

[GraphicTemplate]
Texture=path/to/ImageFile.ext;
TextureTL={x, y, z}; NB: z is ignored;
TextureBR={x, y, z}; NB: z is ignored;
Pivot=centered|{x, y, z}; NB: z is ignored for 2D graphics;
Flip=x|y|both;
Color=[Int]; NB: RGBA format, easier to express in hexadecimal. Example: Color=0xFF0000FF;

[BodyTemplate]
Position={x, y, z};
Rotation=[Float];
Inertia=[Float];
Mass=[Float];
LinearDamping=[Float];
AngularDamping=[Float];
FixedRotation=true|false;
HighSpeed=true|false;
Dynamic=true|false;
Parts=BodyPartSphereTemplate BodyPartBoxTemplate;

[BodyPartSphereTemplate]
Type=Sphere;
Center={x, y, z}|full;
Radius=[Float]|full;
Friction=[Float];
Restitution=[Float];
Density=[Float];
SelfFlags=flags;
CheckMask=flags;
Solid=true|false;

[BodyPartBoxTemplate]
Type=Box;
TopLeft={x, y, z}|full;
BottomRight={x, y, z}|full;
Friction=[Float];
Restitution=[Float];
Density=[Float];
SelfFlags=flags;
CheckMask=flags;
Solid=true|false;

[AnimationCursorTemplate]
AnimationSet=AnimationSetTemplate;
Frequency=[Float];

[AnimationSetTemplate]
Animation[Int]=AnimationTemplate; Example: Animation1=Animation1Template;
Link[Int]=Animation[N1]-Animation[N2]; Example: Link1=Animation2-Animation3;
LinkProperty[Int]=immediate; Example: LinkProperty1=immediate;
LinkPriority[Int]=[Int]; NB: Value should be [0-15]. 0 being the lowest, 8 the default and 15 the highest; Example: LinkPriority1=10;

[AnimationTemplate]
DefaultKeyDuration=[Float];
KeyData[Int]=GraphicTemplate; Example: KeyData1=GraphicTemplate1;
KeyDuration[Int]=[Float]; Example: KeyDuration1=0.1f;

[ViewportTemplate]
Texture=path/to/TextureFile.ext; NB: No texture will default to the screen one
RelativePosition= left|right|top|bottom; Example: RelativePosition=top left;
Position={x, y, z}; NB: Position is in pixels and will be ignored if RelativePosition is specified
RelativeSize={x, y, z}; Example: RelativeSize={1.0, 1.0, 0.0};
Size={x, y, z}; NB: Size is in pixels and will be ignored if RelativeSize is specified
BackgroundColor={r, g, b};
BackgroundClear=true|false; NB: This value defaults to true if not specified
Camera=CameraTemplate;

[CameraTemplate]
Zoom=[Float];
Position={x, y, z};
Rotation=[Float];
FrustumNear=[Float];
FrustumFar=[Float];
FrustumWidth=[Float];
FrustumHeight=[Float];

[FXTemplate]
Slot[Int]=FXSlotTemplate; NB: There is a maximum of 8 slots. Example: Slot1=FXSlot1Template;

[FXSlotAlphaTemplate]
Type=alpha;
Start=[Float]; NB: Start time in seconds;
End=[Float]; NB: End time in seconds;
Period=[Float]; NB: Cycle period is in seconds. 0.0 means the whole length will be used as a period;
Phasis=[Float]; NB: Cycle phasis is in degrees;
Curve=linear|saw|sine;
Squared=true|false; NB: The curve coefficients will be squared. It defaults to false;
Absolute=true|false; NB: The curve coefficient will be used as an absolute value.It defaults to false (=relative);
AlphaStart=[Float]; NB: Alpha is opacity in [0.0-1.0];
AlphaEnd=[Float]; NB: Alpha is opacity in [0.0-1.0];

[FXSlotColorTemplate]
Type=color;
Start=[Float]; NB: Start time in seconds;
End=[Float]; NB: End time in seconds;
Period=[Float]; NB: Cycle period is in seconds. 0.0 means the whole length will be used as a period;
Phasis=[Float]; NB: Cycle phasis is in degrees;
Curve=linear|saw|sine;
Squared=true|false; NB: The curve coefficients will be squared. It defaults to false;
Absolute=true|false; NB: The curve coefficient will be used as an absolute value.It defaults to false (=relative);
ColorStart=[Int]; NB: RGBA format, easier to express in hexadecimal. Alpha component will be ignored. Example: Color=0xFF000000;
ColorEnd=[Int]; NB: RGBA format, easier to express in hexadecimal. Alpha component will be ignored. Example: Color=0xFF000000;

[FXSlotRotationTemplate]
Type=rotation;
Start=[Float]; NB: Start time in seconds;
End=[Float]; NB: End time in seconds;
Period=[Float]; NB: Cycle period is in seconds. 0.0 means the whole length will be used as a period;
Phasis=[Float]; NB: Cycle phasis is in degrees;
Curve=linear|saw|sine;
Squared=true|false; NB: The curve coefficients will be squared. It defaults to false;
Absolute=true|false; NB: The curve coefficient will be used as an absolute value.It defaults to false (=relative);
RotationStart=[Float]; NB: Rotation is in degrees;
RotationEnd=[Float]; NB: Rotation is in degrees;

[FXSlotScaleTemplate]
Type=scale;
Start=[Float]; NB: Start time in seconds;
End=[Float]; NB: End time in seconds;
Period=[Float]; NB: Cycle period is in seconds. 0.0 means the whole length will be used as a period;
Phasis=[Float]; NB: Cycle phasis is in degrees;
Curve=linear|saw|sine;
Squared=true|false; NB: The curve coefficients will be squared. It defaults to false;
Absolute=true|false; NB: The curve coefficient will be used as an absolute value.It defaults to false (=relative);
ScaleStart={x, y, z};
AlphaEnd={x, y, z};

[FXSlotTranslationTemplate]
Type=translation;
Start=[Float]; NB: Start time in seconds;
End=[Float]; NB: End time in seconds;
Period=[Float]; NB: Cycle period is in seconds. 0.0 means the whole length will be used as a period;
Phasis=[Float]; NB: Cycle phasis is in degrees;
Curve=linear|saw|sine;
Squared=true|false; NB: The curve coefficients will be squared. It defaults to false;
Absolute=true|false; NB: The curve coefficient will be used as an absolute value.It defaults to false (=relative);
PositionStart={x, y, z};
PositionEnd={x, y, z};

